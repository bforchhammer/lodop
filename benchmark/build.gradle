dependencies {
    // Additional runtime dependencies for org.apache.pig
    runtime 'jline:jline:0.9.94'
    runtime 'log4j:log4j:1.2.16'
    runtime 'org.slf4j:slf4j-log4j12:1.4.3'
    runtime 'org.antlr:antlr:3.4'
    runtime 'com.google.guava:guava:11.0'
    runtime 'dk.brics.automaton:automaton:1.11-8'

    compile project(':common')
    compile project(':optimization')

    // Additional UDFs
    //runtime 'com.linkedin.datafu:datafu:0.0.10'
}

task packageJar(type: Jar, dependsOn: jar) {
    destinationDir = file(".")
    from {
        configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    }
    from {
        zipTree(project.jar.archivePath)
    }
    from {
        fileTree(dir: './lib', includes: ['**/*.jar'])
    }
    manifest {
        attributes('Main-Class': 'de.uni_potsdam.hpi.loddp.benchmark.Main')
        //attributes('Class-Path': 'loddesc-core-0.1.jar ldif-single-0.5.1-jar-with-dependencies.jar')
    }
}

task(run, dependsOn: ['classes', ':loddp-udf:packageJar'], type: JavaExec) {
    main = 'de.uni_potsdam.hpi.loddp.benchmark.Main'
    classpath = files(
            sourceSets.main.runtimeClasspath,
            "lib",
    )
    if (project.hasProperty("appArgs")) {
        args appArgs.tokenize()
    }
}

task(debug, dependsOn: ['classes', ':loddp-udf:packageJar'], type: JavaExec) {
    main = 'de.uni_potsdam.hpi.loddp.benchmark.Main'
    classpath = files(
            sourceSets.main.runtimeClasspath,
            "lib",
    )
    debug = true
    if (project.hasProperty("appArgs")) {
        args appArgs.tokenize()
    }
}
